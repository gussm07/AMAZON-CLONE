{"ast":null,"code":"var _jsxFileName = \"C:\\\\DEVELOPER\\\\AMAZON-CLONE\\\\amazon\\\\src\\\\Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Payment.css\";\nimport { useStateValue } from \"./StateProvider\";\nimport CheckoutProduct from \"./CheckoutProduct\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { getBasketTotal } from \"./reducer\";\n/* import axios from \"./axios\"; */\n\nimport { db } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Payment() {\n  _s();\n\n  const [{\n    basket,\n    user\n  }, dispatch] = useStateValue();\n  const history = useHistory();\n  /* HOOKS */\n\n  const stripe = useStripe();\n  const elements = useElements();\n  /* maneja el estado del boton cuando esta deshabilitado y cuando le das click */\n\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  /* permite el intercambio entre Stripe y el cliente en AMAZON */\n\n  const [clientSecret, setClientSecret] = useState(true);\n\n  const handleSubmit = async event => {\n    // do all the fancy stripe stuff...\n    event.preventDefault();\n    setProcessing(true);\n    /* SET PROCESSING SOLO PERMITE UNA VEZ DARLE CLICK A BUY NOW */\n\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    }).then(({\n      paymentIntent\n    }) => {\n      // paymentIntent = payment confirmation\n      db.collection(\"users\").doc(user === null || user === void 0 ? void 0 : user.uid).collection(\"orders\").doc(paymentIntent.id).set({\n        basket: basket,\n        amount: paymentIntent.amount,\n        created: paymentIntent.created\n      });\n      setSucceeded(true);\n      setError(null);\n      setProcessing(false);\n      dispatch({\n        type: \"EMPTY_BASKET\"\n      });\n      history.replace(\"/orders\");\n    });\n  };\n\n  const handleChange = event => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Checkout (\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/checkout\",\n          children: [basket === null || basket === void 0 ? void 0 : basket.length, \" items\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Delivery Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__address\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: user === null || user === void 0 ? void 0 : user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"123 React Lane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Los Angeles, CA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Review items and delivery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__items\",\n          children: basket.map(item => /*#__PURE__*/_jsxDEV(CheckoutProduct, {\n            id: item.id,\n            title: item.title,\n            image: item.image,\n            price: item.price,\n            rating: item.rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Payment Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__details\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(CardElement, {\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"payment__priceContainer\",\n              children: [/*#__PURE__*/_jsxDEV(CurrencyFormat, {\n                renderText: value => /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Order Total: \", value]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 42\n                }, this),\n                decimalScale: 2,\n                value: getBasketTotal(basket),\n                displayType: \"text\",\n                thousandSeparator: true,\n                prefix: \"$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: processing || disabled || succeeded,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: processing ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Processing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 39\n                  }, this) : \"Buy Now\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Payment, \"kOIcnDIuPWVx6JaRK3mMLWSTvjs=\", false, function () {\n  return [useStateValue, useHistory, useStripe, useElements];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["C:/DEVELOPER/AMAZON-CLONE/amazon/src/Payment.js"],"names":["React","useState","useEffect","useStateValue","CheckoutProduct","Link","useHistory","CardElement","useStripe","useElements","CurrencyFormat","getBasketTotal","db","Payment","basket","user","dispatch","history","stripe","elements","succeeded","setSucceeded","processing","setProcessing","error","setError","disabled","setDisabled","clientSecret","setClientSecret","handleSubmit","event","preventDefault","payload","confirmCardPayment","payment_method","card","getElement","then","paymentIntent","collection","doc","uid","id","set","amount","created","type","replace","handleChange","empty","message","length","email","map","item","title","image","price","rating","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Payment.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { getBasketTotal } from \"./reducer\";\r\n/* import axios from \"./axios\"; */\r\nimport { db } from \"./firebase\";\r\n\r\nfunction Payment() {\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n  /* HOOKS */\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  /* maneja el estado del boton cuando esta deshabilitado y cuando le das click */\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [processing, setProcessing] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [disabled, setDisabled] = useState(true);\r\n  /* permite el intercambio entre Stripe y el cliente en AMAZON */\r\n  const [clientSecret, setClientSecret] = useState(true);\r\n\r\n  const handleSubmit = async (event) => {\r\n    // do all the fancy stripe stuff...\r\n    event.preventDefault();\r\n    setProcessing(true);\r\n    /* SET PROCESSING SOLO PERMITE UNA VEZ DARLE CLICK A BUY NOW */\r\n\r\n    const payload = await stripe\r\n      .confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n        },\r\n      })\r\n      .then(({ paymentIntent }) => {\r\n        // paymentIntent = payment confirmation\r\n\r\n        db.collection(\"users\")\r\n          .doc(user?.uid)\r\n          .collection(\"orders\")\r\n          .doc(paymentIntent.id)\r\n          .set({\r\n            basket: basket,\r\n            amount: paymentIntent.amount,\r\n            created: paymentIntent.created,\r\n          });\r\n\r\n        setSucceeded(true);\r\n        setError(null);\r\n        setProcessing(false);\r\n\r\n        dispatch({\r\n          type: \"EMPTY_BASKET\",\r\n        });\r\n\r\n        history.replace(\"/orders\");\r\n      });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    // Listen for changes in the CardElement\r\n    // and display any errors as the customer types their card details\r\n    setDisabled(event.empty);\r\n    setError(event.error ? event.error.message : \"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment\">\r\n      <div className=\"payment__container\">\r\n        <h1>\r\n          Checkout (<Link to=\"/checkout\">{basket?.length} items</Link>)\r\n        </h1>\r\n\r\n        {/* Payment section - delivery address */}\r\n        <div className=\"payment__section\">\r\n          <div className=\"payment__title\">\r\n            <h3>Delivery Address</h3>\r\n          </div>\r\n          <div className=\"payment__address\">\r\n            <p>{user?.email}</p>\r\n            <p>123 React Lane</p>\r\n            <p>Los Angeles, CA</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Payment section - Review Items */}\r\n        <div className=\"payment__section\">\r\n          <div className=\"payment__title\">\r\n            <h3>Review items and delivery</h3>\r\n          </div>\r\n          <div className=\"payment__items\">\r\n            {basket.map((item) => (\r\n              <CheckoutProduct\r\n                id={item.id}\r\n                title={item.title}\r\n                image={item.image}\r\n                price={item.price}\r\n                rating={item.rating}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Payment section - Payment method */}\r\n        <div className=\"payment__section\">\r\n          <div className=\"payment__title\">\r\n            <h3>Payment Method</h3>\r\n          </div>\r\n          <div className=\"payment__details\">\r\n            {/* Stripe magic will go */}\r\n            <form onSubmit={handleSubmit}>\r\n              <CardElement onChange={handleChange} />\r\n              {/* PRECIO DE LAS COSAS */}\r\n              <div className=\"payment__priceContainer\">\r\n                <CurrencyFormat\r\n                  renderText={(value) => <h3>Order Total: {value}</h3>}\r\n                  decimalScale={2}\r\n                  value={getBasketTotal(basket)}\r\n                  displayType={\"text\"}\r\n                  thousandSeparator={true}\r\n                  prefix={\"$\"}\r\n                />\r\n                <button disabled={processing || disabled || succeeded}>\r\n                  <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\r\n                </button>\r\n              </div>\r\n\r\n              {/* Errors */}\r\n              {error && <div>{error}</div>}\r\n            </form>\r\n          </div>\r\n          {/* Stripe magic will go */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Payment;\r\n"]},"metadata":{},"sourceType":"module"}