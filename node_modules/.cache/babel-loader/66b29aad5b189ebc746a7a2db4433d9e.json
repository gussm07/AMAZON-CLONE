{"ast":null,"code":"import _regeneratorRuntime from\"C:/DEVELOPER/AMAZON-CLONE/amazon/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/DEVELOPER/AMAZON-CLONE/amazon/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/DEVELOPER/AMAZON-CLONE/amazon/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import\"./Payment.css\";import{useStateValue}from\"./StateProvider\";import CheckoutProduct from\"./CheckoutProduct\";import{Link,useHistory}from\"react-router-dom\";import{CardElement,useStripe,useElements}from\"@stripe/react-stripe-js\";import CurrencyFormat from\"react-currency-format\";import{getBasketTotal}from\"./reducer\";import axios from\"./axios\";import{db}from\"./firebase\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function Payment(){var _useStateValue=useStateValue(),_useStateValue2=_slicedToArray(_useStateValue,2),_useStateValue2$=_useStateValue2[0],basket=_useStateValue2$.basket,user=_useStateValue2$.user,dispatch=_useStateValue2[1];var history=useHistory();/* HOOKS */var stripe=useStripe();var elements=useElements();/* maneja el estado del boton cuando esta deshabilitado y cuando le das click */var _useState=useState(false),_useState2=_slicedToArray(_useState,2),succeeded=_useState2[0],setSucceeded=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),processing=_useState4[0],setProcessing=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),disabled=_useState8[0],setDisabled=_useState8[1];/* permite el intercambio entre Stripe y el cliente en AMAZON */var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),clientSecret=_useState10[0],setClientSecret=_useState10[1];/* CADA QUE EL BASKET TENGA CAMBIOS, GENERA UN NUEVO CLIENTSECRET */useEffect(function(){// generate the special stripe secret which allows us to charge a customer\nvar getClientSecret=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios({method:\"post\",// Stripe expects the total in a currencies subunits\n/* EL *100 DEPENDE DE LA CURRENCY QUE OCUPES, ESTE CASO ES DOLARES */ /* ES UN REQUERIMIENTO DE STRIPE */url:\"/payments/create?total=\".concat(getBasketTotal(basket)*100)});case 2:response=_context.sent;/* establece el clientsecret */setClientSecret(response.data.clientSecret);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getClientSecret(){return _ref.apply(this,arguments);};}();getClientSecret();},[basket]);var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var payload;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// do all the fancy stripe stuff...\nevent.preventDefault();setProcessing(true);/* SET PROCESSING SOLO PERMITE UNA VEZ DARLE CLICK A BUY NOW */_context2.next=4;return stripe.confirmCardPayment(clientSecret,{payment_method:{/* busca el element card para hacer el pago */card:elements.getElement(CardElement)}}).then(function(_ref3){var paymentIntent=_ref3.paymentIntent;// paymentIntent = payment confirmation\n//NO SQL DATA STRUCTURE\ndb.collection(\"users\").doc(user===null||user===void 0?void 0:user.uid).collection(\"orders\").doc(paymentIntent.id).set({basket:basket,amount:paymentIntent.amount,//time stamp de la hora de compra\ncreated:paymentIntent.created});/* SI TODO SALE BIEN... */ /* SI TODO SALE BIEN... */setSucceeded(true);setError(null);setProcessing(false);//DESPUES DE REALIZAR LA COMPRA, VACIA LA CESTA DE COMPRA\n//DESPUES DE REALIZAR LA COMPRA, VACIA LA CESTA DE COMPRA\ndispatch({type:\"EMPTY_BASKET\"});/* LO REGRESAMOS A LAS ORDENES */ /* LO REGRESAMOS A LAS ORDENES */history.replace(\"/orders\");});case 4:payload=_context2.sent;case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(event){// Listen for changes in the CardElement\n// and display any errors as the customer types their card details\nsetDisabled(event.empty);setError(event.error?event.error.message:\"\");};return/*#__PURE__*/_jsx(\"div\",{className:\"payment\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"payment__container\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Checkout (\",/*#__PURE__*/_jsxs(Link,{to:\"/checkout\",children:[basket===null||basket===void 0?void 0:basket.length,\" items\"]}),\")\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment__section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"payment__title\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Delivery Address\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment__address\",children:[/*#__PURE__*/_jsx(\"p\",{children:user===null||user===void 0?void 0:user.email}),/*#__PURE__*/_jsx(\"p\",{children:\"123 React Lane\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Los Angeles, CA\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment__section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"payment__title\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Review items and delivery\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"payment__items\",children:basket.map(function(item){return/*#__PURE__*/_jsx(CheckoutProduct,{id:item.id,title:item.title,image:item.image,price:item.price,rating:item.rating});})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment__section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"payment__title\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Payment Method\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"payment__details\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(CardElement,{onChange:handleChange}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment__priceContainer\",children:[/*#__PURE__*/_jsx(CurrencyFormat,{renderText:function renderText(value){return/*#__PURE__*/_jsxs(\"h3\",{children:[\"Order Total: \",value]});},decimalScale:2,value:getBasketTotal(basket),displayType:\"text\",thousandSeparator:true,prefix:\"$\"}),/*#__PURE__*/_jsx(\"button\",{disabled:processing||disabled||succeeded,children:/*#__PURE__*/_jsx(\"span\",{children:processing?/*#__PURE__*/_jsx(\"p\",{children:\"Processing\"}):\"Buy Now\"})})]}),error&&/*#__PURE__*/_jsx(\"div\",{children:error})]})})]})]})});}export default Payment;","map":{"version":3,"sources":["C:/DEVELOPER/AMAZON-CLONE/amazon/src/Payment.js"],"names":["React","useState","useEffect","useStateValue","CheckoutProduct","Link","useHistory","CardElement","useStripe","useElements","CurrencyFormat","getBasketTotal","axios","db","Payment","basket","user","dispatch","history","stripe","elements","succeeded","setSucceeded","processing","setProcessing","error","setError","disabled","setDisabled","clientSecret","setClientSecret","getClientSecret","method","url","response","data","handleSubmit","event","preventDefault","confirmCardPayment","payment_method","card","getElement","then","paymentIntent","collection","doc","uid","id","set","amount","created","type","replace","payload","handleChange","empty","message","length","email","map","item","title","image","price","rating","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Payment.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { getBasketTotal } from \"./reducer\";\r\nimport axios from \"./axios\";\r\nimport { db } from \"./firebase\";\r\n\r\nfunction Payment() {\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n  /* HOOKS */\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  /* maneja el estado del boton cuando esta deshabilitado y cuando le das click */\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [processing, setProcessing] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [disabled, setDisabled] = useState(true);\r\n  /* permite el intercambio entre Stripe y el cliente en AMAZON */\r\n  const [clientSecret, setClientSecret] = useState(true);\r\n\r\n  /* CADA QUE EL BASKET TENGA CAMBIOS, GENERA UN NUEVO CLIENTSECRET */\r\n  useEffect(() => {\r\n    // generate the special stripe secret which allows us to charge a customer\r\n    const getClientSecret = async () => {\r\n      /* AXIOS PERMITE HACER GET, REQUEST, PUSH ETC... FETCHING LIBRARY*/\r\n      const response = await axios({\r\n        method: \"post\",\r\n        // Stripe expects the total in a currencies subunits\r\n        /* EL *100 DEPENDE DE LA CURRENCY QUE OCUPES, ESTE CASO ES DOLARES */\r\n        /* ES UN REQUERIMIENTO DE STRIPE */\r\n        url: `/payments/create?total=${getBasketTotal(basket) * 100}`,\r\n      });\r\n      /* establece el clientsecret */\r\n      setClientSecret(response.data.clientSecret);\r\n    };\r\n\r\n    getClientSecret();\r\n  }, [basket]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    // do all the fancy stripe stuff...\r\n    event.preventDefault();\r\n    setProcessing(true);\r\n    /* SET PROCESSING SOLO PERMITE UNA VEZ DARLE CLICK A BUY NOW */\r\n\r\n    const payload = await stripe\r\n      .confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          /* busca el element card para hacer el pago */\r\n          card: elements.getElement(CardElement),\r\n        },\r\n      })\r\n      .then(({ paymentIntent }) => {\r\n        // paymentIntent = payment confirmation\r\n\r\n        //NO SQL DATA STRUCTURE\r\n        db.collection(\"users\")\r\n          .doc(user?.uid)\r\n          .collection(\"orders\")\r\n          .doc(paymentIntent.id)\r\n          .set({\r\n            basket: basket,\r\n            amount: paymentIntent.amount,\r\n            //time stamp de la hora de compra\r\n            created: paymentIntent.created,\r\n          });\r\n        /* SI TODO SALE BIEN... */\r\n        setSucceeded(true);\r\n        setError(null);\r\n        setProcessing(false);\r\n        //DESPUES DE REALIZAR LA COMPRA, VACIA LA CESTA DE COMPRA\r\n        dispatch({\r\n          type: \"EMPTY_BASKET\",\r\n        });\r\n        /* LO REGRESAMOS A LAS ORDENES */\r\n        history.replace(\"/orders\");\r\n      });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    // Listen for changes in the CardElement\r\n    // and display any errors as the customer types their card details\r\n    setDisabled(event.empty);\r\n    setError(event.error ? event.error.message : \"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment\">\r\n      <div className=\"payment__container\">\r\n        <h1>\r\n          Checkout (<Link to=\"/checkout\">{basket?.length} items</Link>)\r\n        </h1>\r\n\r\n        {/* Payment section - delivery address */}\r\n        <div className=\"payment__section\">\r\n          <div className=\"payment__title\">\r\n            <h3>Delivery Address</h3>\r\n          </div>\r\n          <div className=\"payment__address\">\r\n            <p>{user?.email}</p>\r\n            <p>123 React Lane</p>\r\n            <p>Los Angeles, CA</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Payment section - Review Items */}\r\n        <div className=\"payment__section\">\r\n          <div className=\"payment__title\">\r\n            <h3>Review items and delivery</h3>\r\n          </div>\r\n          <div className=\"payment__items\">\r\n            {basket.map(item => (\r\n              <CheckoutProduct\r\n                id={item.id}\r\n                title={item.title}\r\n                image={item.image}\r\n                price={item.price}\r\n                rating={item.rating}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Payment section - Payment method */}\r\n        <div className=\"payment__section\">\r\n          <div className=\"payment__title\">\r\n            <h3>Payment Method</h3>\r\n          </div>\r\n          <div className=\"payment__details\">\r\n            {/* Stripe magic will go */}\r\n            <form onSubmit={handleSubmit}>\r\n              <CardElement onChange={handleChange} />\r\n              {/* PRECIO DE LAS COSAS */}\r\n              <div className=\"payment__priceContainer\">\r\n                <CurrencyFormat\r\n                  renderText={(value) => <h3>Order Total: {value}</h3>}\r\n                  decimalScale={2}\r\n                  value={getBasketTotal(basket)}\r\n                  displayType={\"text\"}\r\n                  thousandSeparator={true}\r\n                  prefix={\"$\"}\r\n                />\r\n                <button disabled={processing || disabled || succeeded}>\r\n                  <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\r\n                </button>\r\n              </div>\r\n\r\n              {/* Errors */}\r\n              {error && <div>{error}</div>}\r\n            </form>\r\n          </div>\r\n          {/* Stripe magic will go */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Payment;\r\n"]},"metadata":{},"sourceType":"module"}